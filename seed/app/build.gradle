apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'spoon'

apply from: 'buildscripts/jacoco.gradle'
apply from: 'buildscripts/utils.gradle'

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    signingConfigs {
        release {
            if (config.releaseSigning.storePassword != null) {
                storeFile file(config.releaseSigning.storeFile)
                storePassword config.releaseSigning.storePassword
                keyAlias config.releaseSigning.alias
                keyPassword config.releaseSigning.aliasPassword
            }
        }
    }

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true

        buildConfigField "boolean", "LEAK_CANARY_ENABLED", "${!isCiBuild()}"

        buildConfigField "String", "BUILD_TIME", "\"${getBuildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${getGitSha()}\""
        buildConfigField "String", "BUILD_NUMBER", "\"${getCiBuildNumber()}\""
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-${getCiBuildNumber()}"
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'NOTICE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    if (isCiBuild()) {
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def existingFile = output.outputFile

                def variantName = "${variant.flavorName}-${variant.buildType.name.toLowerCase()}"
                def gitBranchName = "${gitBranchName()}"

                def newName = "seed-${variantName}-${gitBranchName}-${config.versionCode}-${System.getenv("BUILD_NUMBER")}.apk"
                output.outputFile = new File(existingFile.parent, newName)
            }
        }
    }

    applicationVariants.all { variant ->
        createJacocoTask(variant)
    }
}

dependencies {
    compile project(":model")
    compile project(":data")
    compile fileTree(dir: 'libs', include: '*.jar')
    compile "com.android.support:support-v4:22.2.0"
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.github.bumptech.glide:glide:3.6.0'
    compile 'com.google.dagger:dagger:2.0.1'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'com.facebook.stetho:stetho-timber:1.1.1'
    compile 'com.facebook.device.yearclass:yearclass:1.0.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    apt 'com.google.dagger:dagger-compiler:2.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:shadows-support-v4:3.0'
    testCompile 'org.mockito:mockito-core:2.0.8-beta'
    testCompile 'org.assertj:assertj-core:1.7.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.9'
    androidTestCompile 'org.assertj:assertj-core:1.7.1'
}

// Display more verbose information when running tests from CLI
tasks.withType(Test).whenTaskAdded { testTask ->
    testTask.maxParallelForks 4
    testTask.testLogging config.testOptions
}

spoon {
    debug = true
    noAnimations = !isCiBuild()
}